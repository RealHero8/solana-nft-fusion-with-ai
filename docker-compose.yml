version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nft_fusion_db
    environment:
      POSTGRES_DB: nft_fusion_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nft_fusion_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nft_fusion_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nft_fusion_network

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nft_fusion_backend
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/nft_fusion_db
      - REDIS_URL=redis://redis:6379
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - nft_fusion_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nft_fusion_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api/v1
      - NEXT_PUBLIC_SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - nft_fusion_network
    restart: unless-stopped

  # AI Models Service
  ai_models:
    build:
      context: ./ai-models
      dockerfile: Dockerfile
    container_name: nft_fusion_ai
    environment:
      - PYTHONPATH=/app
      - MODEL_PATH=/app/models
    ports:
      - "8000:8000"
    volumes:
      - ./ai-models:/app
      - ai_models_data:/app/models
    networks:
      - nft_fusion_network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nft_fusion_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - nft_fusion_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ai_models_data:

networks:
  nft_fusion_network:
    driver: bridge 